"use strict";

var React = require('react');

var _require = require('react-helmet'),
    Helmet = _require.Helmet;

var defaultPluginOptions = {
  noTrailingSlash: false,
  nopQueryString: false,
  nopHash: false
};

var isExcluded = function isExcluded(excludes, element) {
  if (!Array.isArray(excludes)) return false;
  element = element.replace(/\/+$/, '');
  return excludes.some(function (exclude) {
    if (exclude instanceof RegExp) return element.match(exclude);
    return exclude.includes(element);
  });
};

module.exports = function (_ref, pluginOptions) {
  var element = _ref.element,
      location = _ref.props.location;

  if (pluginOptions === void 0) {
    pluginOptions = {};
  }

  var options = Object.assign({}, defaultPluginOptions, pluginOptions);

  if (options.siteUrl && !isExcluded(options.exclude, location.pathname)) {
    var pathname = location.pathname || '/';
    if (options.noTrailingSlash && pathname.endsWith('/')) pathname = pathname.substring(0, pathname.length - 1);
    var myUrl = "" + options.siteUrl + pathname;
    if (!options.noQueryString) myUrl += location.search;
    if (!options.noHash) myUrl += location.hash;
    return React.createElement(React.Fragment, null, React.createElement(Helmet, {
      link: [{
        rel: 'canonical',
        key: myUrl,
        href: myUrl
      }]
    }), element);
  }

  return element;
};